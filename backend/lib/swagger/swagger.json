{
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"IUser": {
				"additionalProperties": false,
				"type": "object"
			},
			"AuthPayload": {
				"properties": {
					"user": {
						"$ref": "#/components/schemas/IUser"
					},
					"token": {
						"type": "string"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"AuthResponses": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"payload": {
						"$ref": "#/components/schemas/AuthPayload"
					},
					"message": {}
				},
				"required": [
					"success"
				],
				"type": "object",
				"additionalProperties": false
			},
			"AuthRequest": {
				"properties": {
					"username": {
						"type": "string"
					},
					"password": {
						"type": "string"
					}
				},
				"required": [
					"username",
					"password"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Pick_IMachine.name-or-shortName-or-longName-or-createdAt-or-updatedAt_": {
				"properties": {
					"name": {
						"type": "string"
					},
					"shortName": {
						"type": "string"
					},
					"longName": {
						"type": "string"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"updatedAt": {
						"type": "string",
						"format": "date-time"
					}
				},
				"required": [
					"name"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"ISafeMachine": {
				"$ref": "#/components/schemas/Pick_IMachine.name-or-shortName-or-longName-or-createdAt-or-updatedAt_"
			},
			"MachinePayload": {
				"properties": {
					"machine": {
						"$ref": "#/components/schemas/ISafeMachine"
					},
					"machines": {
						"items": {
							"$ref": "#/components/schemas/ISafeMachine"
						},
						"type": "array"
					},
					"machineLength": {
						"type": "number",
						"format": "double"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"MachineResponse": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"payload": {
						"$ref": "#/components/schemas/MachinePayload"
					},
					"message": {}
				},
				"required": [
					"success"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Pick_IMachine.name_": {
				"properties": {
					"name": {
						"type": "string"
					}
				},
				"required": [
					"name"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"MachineReq": {
				"$ref": "#/components/schemas/Pick_IMachine.name_"
			},
			"Pick_ITest.title-or-createdAt-or-updatedAt_": {
				"properties": {
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"updatedAt": {
						"type": "string",
						"format": "date-time"
					},
					"title": {
						"type": "string"
					}
				},
				"required": [
					"title"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"ISafeTest": {
				"$ref": "#/components/schemas/Pick_ITest.title-or-createdAt-or-updatedAt_"
			},
			"TestPayload": {
				"properties": {
					"test": {
						"$ref": "#/components/schemas/ISafeTest"
					},
					"tests": {
						"items": {
							"$ref": "#/components/schemas/ISafeTest"
						},
						"type": "array"
					},
					"listLength": {
						"type": "number",
						"format": "double"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"TestResponse": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"payload": {
						"$ref": "#/components/schemas/TestPayload"
					},
					"message": {}
				},
				"required": [
					"success"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Pick_ITest.title_": {
				"properties": {
					"title": {
						"type": "string"
					}
				},
				"required": [
					"title"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"TestReq": {
				"$ref": "#/components/schemas/Pick_ITest.title_"
			},
			"USER_TYPE": {
				"type": "string",
				"enum": [
					"ADMIN",
					"STAFF"
				]
			},
			"Pick_IUser.firstname-or-lastname-or-username-or-email-or-user_type-or-createdAt-or-updatedAt_": {
				"properties": {
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"updatedAt": {
						"type": "string",
						"format": "date-time"
					},
					"firstname": {
						"type": "string"
					},
					"lastname": {
						"type": "string"
					},
					"username": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"user_type": {
						"$ref": "#/components/schemas/USER_TYPE"
					}
				},
				"required": [
					"firstname",
					"lastname",
					"username",
					"email",
					"user_type"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"ISafeUser": {
				"$ref": "#/components/schemas/Pick_IUser.firstname-or-lastname-or-username-or-email-or-user_type-or-createdAt-or-updatedAt_"
			},
			"UserPayload": {
				"properties": {
					"user": {
						"$ref": "#/components/schemas/ISafeUser"
					},
					"users": {
						"items": {
							"$ref": "#/components/schemas/ISafeUser"
						},
						"type": "array"
					},
					"userLength": {
						"type": "number",
						"format": "double"
					},
					"token": {
						"type": "string"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"UserResponse": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"payload": {
						"$ref": "#/components/schemas/UserPayload"
					},
					"message": {}
				},
				"required": [
					"success"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Pick_IUser.firstname-or-lastname-or-username-or-password-or-email-or-user_type_": {
				"properties": {
					"firstname": {
						"type": "string"
					},
					"lastname": {
						"type": "string"
					},
					"username": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"user_type": {
						"$ref": "#/components/schemas/USER_TYPE"
					},
					"password": {
						"type": "string"
					}
				},
				"required": [
					"firstname",
					"lastname",
					"username",
					"email",
					"user_type",
					"password"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"UserCreateReq": {
				"$ref": "#/components/schemas/Pick_IUser.firstname-or-lastname-or-username-or-password-or-email-or-user_type_"
			},
			"Pick_UserUpdateReqPick.Exclude_keyofUserUpdateReqPick.firstname-or-lastname-or-username-or-email__": {
				"properties": {},
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"Omit_UserUpdateReqPick.firstname-or-lastname-or-username-or-email_": {
				"$ref": "#/components/schemas/Pick_UserUpdateReqPick.Exclude_keyofUserUpdateReqPick.firstname-or-lastname-or-username-or-email__",
				"description": "Construct a type with the properties of T except for those in type K."
			},
			"UserUpdateReq": {
				"allOf": [
					{
						"$ref": "#/components/schemas/Omit_UserUpdateReqPick.firstname-or-lastname-or-username-or-email_"
					},
					{
						"properties": {
							"email": {
								"type": "string"
							},
							"username": {
								"type": "string"
							},
							"lastname": {
								"type": "string"
							},
							"firstname": {
								"type": "string"
							}
						},
						"type": "object"
					}
				]
			}
		},
		"securitySchemes": {
			"bearerAuth": {
				"type": "apiKey",
				"name": "authorization",
				"in": "header"
			}
		}
	},
	"info": {
		"title": "angular-typescript-starter",
		"version": "1.0.0",
		"description": "BE",
		"license": {
			"name": "MIT"
		},
		"contact": {
			"name": "053steve"
		}
	},
	"openapi": "3.0.0",
	"paths": {
		"/auth": {
			"post": {
				"operationId": "Auth",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AuthResponses"
								}
							}
						}
					}
				},
				"tags": [
					"auth"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/AuthRequest"
							}
						}
					}
				}
			}
		},
		"/machine/create": {
			"post": {
				"operationId": "CreateMachine",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/MachineResponse"
								}
							}
						}
					}
				},
				"tags": [
					"machine"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/MachineReq"
							}
						}
					}
				}
			}
		},
		"/machine/update/{machineId}": {
			"put": {
				"operationId": "UpdateMachine",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/MachineResponse"
								}
							}
						}
					}
				},
				"tags": [
					"machine"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "machineId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/MachineReq"
							}
						}
					}
				}
			}
		},
		"/machine/detail/{machineId}": {
			"get": {
				"operationId": "GetMachine",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/MachineResponse"
								}
							}
						}
					}
				},
				"tags": [
					"machine"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "machineId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/machine/delete/{machineId}": {
			"delete": {
				"operationId": "DeleteMachine",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/MachineResponse"
								}
							}
						}
					}
				},
				"tags": [
					"machine"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "machineId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/machine/list": {
			"get": {
				"operationId": "GetAllMachines",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/MachineResponse"
								}
							}
						}
					}
				},
				"tags": [
					"machine"
				],
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "pageNumber",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "pageSize",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "filter",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "sortOrder",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/machine/search": {
			"get": {
				"operationId": "GetMachineByName",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/MachineResponse"
								}
							}
						}
					}
				},
				"tags": [
					"machine"
				],
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "name",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "pageNumber",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "pageSize",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "filter",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "sortOrder",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/test/create": {
			"post": {
				"operationId": "CreateTest",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/TestResponse"
								}
							}
						}
					}
				},
				"tags": [
					"test"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/TestReq"
							}
						}
					}
				}
			}
		},
		"/test/update/{testId}": {
			"patch": {
				"operationId": "UpdateTest",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/TestResponse"
								}
							}
						}
					}
				},
				"tags": [
					"test"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "testId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/TestReq"
							}
						}
					}
				}
			}
		},
		"/test/detail/{testId}": {
			"get": {
				"operationId": "GetTest",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/TestResponse"
								}
							}
						}
					}
				},
				"tags": [
					"test"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "testId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/test/delete/{testId}": {
			"delete": {
				"operationId": "DeleteTest",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/TestResponse"
								}
							}
						}
					}
				},
				"tags": [
					"test"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "testId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/test/list": {
			"get": {
				"operationId": "GetAllTests",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/TestResponse"
								}
							}
						}
					}
				},
				"tags": [
					"test"
				],
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "pageNumber",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "pageSize",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "filter",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "sortOrder",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/test/search": {
			"get": {
				"operationId": "GetTestByName",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/TestResponse"
								}
							}
						}
					}
				},
				"tags": [
					"test"
				],
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "name",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "pageNumber",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "pageSize",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "filter",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "sortOrder",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/user/search": {
			"get": {
				"operationId": "SearchUser",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UserResponse"
								}
							}
						}
					}
				},
				"tags": [
					"user"
				],
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "username",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "email",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "firstname",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "lastname",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "pageNumber",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "pageSize",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "filter",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "sortOrder",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/user/create": {
			"post": {
				"operationId": "CreateUser",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UserResponse"
								}
							}
						}
					}
				},
				"tags": [
					"user"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UserCreateReq"
							}
						}
					}
				}
			}
		},
		"/user/list": {
			"get": {
				"operationId": "GetAllUsers",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UserResponse"
								}
							}
						}
					}
				},
				"tags": [
					"user"
				],
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "pageNumber",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "pageSize",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "filter",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "sortOrder",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/user/detail/{userId}": {
			"get": {
				"operationId": "GetUser",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UserResponse"
								}
							}
						}
					}
				},
				"tags": [
					"user"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "userId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/user/update/{userId}": {
			"put": {
				"operationId": "UpdateUser",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UserResponse"
								}
							}
						}
					}
				},
				"tags": [
					"user"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "userId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UserUpdateReq"
							}
						}
					}
				}
			}
		},
		"/user/delete/{userId}": {
			"delete": {
				"operationId": "DeleteUser",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UserResponse"
								}
							}
						}
					}
				},
				"tags": [
					"user"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "userId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/user/{user_type}": {
			"get": {
				"operationId": "GetUserByUserType",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UserResponse"
								}
							}
						}
					}
				},
				"tags": [
					"user"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "user_type",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/USER_TYPE"
						}
					},
					{
						"in": "query",
						"name": "username",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "email",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "firstName",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "lastName",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "pageNumber",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "pageSize",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "filter",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "sortOrder",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		}
	},
	"servers": [
		{
			"url": "http://localhost:4000/"
		}
	]
}